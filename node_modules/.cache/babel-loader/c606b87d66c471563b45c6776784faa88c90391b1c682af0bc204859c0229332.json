{"ast":null,"code":"import axios from'axios';import{setLoading,setUsers,setError}from'./userSlice';// Fetch users from API\nexport const fetchUsers=()=>async dispatch=>{dispatch(setLoading(true));try{const res=await axios.get('https://reqres.in/api/users?page=1');dispatch(setUsers(res.data.data));}catch(error){dispatch(setError(error.message));}finally{dispatch(setLoading(false));}};// Remove user (client-side only)\nexport const removeUser=userId=>(dispatch,getState)=>{const{users}=getState().users;const updatedUsers=users.filter(user=>user.id!==userId);dispatch(setUsers(updatedUsers));};// Edit user (client-side only)\nexport const editUser=updatedUser=>(dispatch,getState)=>{const{users}=getState().users;const updatedUsers=users.map(user=>user.id===updatedUser.id?updatedUser:user);dispatch(setUsers(updatedUsers));};","map":{"version":3,"names":["axios","setLoading","setUsers","setError","fetchUsers","dispatch","res","get","data","error","message","removeUser","userId","getState","users","updatedUsers","filter","user","id","editUser","updatedUser","map"],"sources":["/Users/ranium/Documents/vue-app/react-task/src/features/users/userThunks.js"],"sourcesContent":["import axios from 'axios';\nimport { setLoading, setUsers, setError } from './userSlice';\n\n// Fetch users from API\nexport const fetchUsers = () => async (dispatch) => {\n    dispatch(setLoading(true));\n    try {\n        const res = await axios.get('https://reqres.in/api/users?page=1');\n        dispatch(setUsers(res.data.data));\n    } catch (error) {\n        dispatch(setError(error.message));\n    } finally {\n        dispatch(setLoading(false));\n    }\n};\n\n// Remove user (client-side only)\nexport const removeUser = (userId) => (dispatch, getState) => {\n    const { users } = getState().users;\n    const updatedUsers = users.filter(user => user.id !== userId);\n    dispatch(setUsers(updatedUsers));\n};\n\n// Edit user (client-side only)\nexport const editUser = (updatedUser) => (dispatch, getState) => {\n    const { users } = getState().users;\n    const updatedUsers = users.map(user =>\n        user.id === updatedUser.id ? updatedUser : user\n    );\n    dispatch(setUsers(updatedUsers));\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,CAAEC,QAAQ,CAAEC,QAAQ,KAAQ,aAAa,CAE5D;AACA,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CAChDA,QAAQ,CAACJ,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,GAAI,CACA,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAN,KAAK,CAACO,GAAG,CAAC,oCAAoC,CAAC,CACjEF,QAAQ,CAACH,QAAQ,CAACI,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,CACZJ,QAAQ,CAACF,QAAQ,CAACM,KAAK,CAACC,OAAO,CAAC,CAAC,CACrC,CAAC,OAAS,CACNL,QAAQ,CAACJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAC/B,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,UAAU,CAAIC,MAAM,EAAK,CAACP,QAAQ,CAAEQ,QAAQ,GAAK,CAC1D,KAAM,CAAEC,KAAM,CAAC,CAAGD,QAAQ,CAAC,CAAC,CAACC,KAAK,CAClC,KAAM,CAAAC,YAAY,CAAGD,KAAK,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAAC,CAC7DP,QAAQ,CAACH,QAAQ,CAACa,YAAY,CAAC,CAAC,CACpC,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,QAAQ,CAAIC,WAAW,EAAK,CAACf,QAAQ,CAAEQ,QAAQ,GAAK,CAC7D,KAAM,CAAEC,KAAM,CAAC,CAAGD,QAAQ,CAAC,CAAC,CAACC,KAAK,CAClC,KAAM,CAAAC,YAAY,CAAGD,KAAK,CAACO,GAAG,CAACJ,IAAI,EAC/BA,IAAI,CAACC,EAAE,GAAKE,WAAW,CAACF,EAAE,CAAGE,WAAW,CAAGH,IAC/C,CAAC,CACDZ,QAAQ,CAACH,QAAQ,CAACa,YAAY,CAAC,CAAC,CACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}